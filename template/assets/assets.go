// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 313486880, time.UTC),
		},
		"/terraform": &vfsgen۰DirInfo{
			name:    "terraform",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 315293532, time.UTC),
		},
		"/terraform/basic": &vfsgen۰DirInfo{
			name:    "basic",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 314191119, time.UTC),
		},
		"/terraform/basic/NOTE.txt": &vfsgen۰CompressedFileInfo{
			name:             "NOTE.txt",
			modTime:          time.Date(2018, 10, 14, 2, 28, 29, 313614951, time.UTC),
			uncompressedSize: 272,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x4d\x4a\x04\x31\x10\x46\xf7\x39\x45\xcd\x05\xd2\xfb\xde\x29\xe8\xcc\x4a\x06\x11\x5c\x97\xe9\x6f\x9c\x30\xe9\xa4\x48\x55\x94\x36\xf4\xdd\xc5\x1e\xff\x76\xf5\x1e\x8f\x82\xaf\x77\x7f\xe4\x70\xe1\x57\x3c\xf0\x8c\x75\x25\xb9\x12\x69\x0b\x01\xaa\xa7\x96\xd2\x42\x13\x24\x95\x05\xd3\xce\xb9\x63\x02\x2b\xa8\xe2\x84\x4a\x76\xc6\x76\x6b\x69\x35\x40\x47\x72\xee\xf1\x1b\x68\x5f\x4b\x13\xa2\x91\x7a\xf7\x3f\x72\x73\x4f\x98\x25\xb1\x61\x5d\xdd\xcd\x47\xab\xa0\xfb\x96\x83\xc5\x92\xf5\x1a\x6f\xf2\xd7\xfd\xab\xdd\xbe\x90\x15\x3a\x9b\x89\x8e\xc3\xd0\xbb\xbf\xcb\x6f\xb1\x96\x3c\x23\xdb\x2d\xeb\x36\xe1\xaf\x67\x11\xcf\x5f\xbf\xde\xf1\xa2\xd1\xa0\x3e\xc3\x06\x96\x38\x1c\x90\x52\x79\x2e\x35\x4d\xce\x1d\x58\x64\x21\xb5\x1a\x2f\xd0\x9d\xfb\x0c\x00\x00\xff\xff\x38\x7d\x4f\xf9\x10\x01\x00\x00"),
		},
		"/terraform/basic/manifest.yaml": &vfsgen۰CompressedFileInfo{
			name:             "manifest.yaml",
			modTime:          time.Date(2018, 10, 14, 2, 28, 29, 313814695, time.UTC),
			uncompressedSize: 325,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x31\x6b\xc3\x30\x10\x85\xf7\xfb\x15\x07\x99\x6b\xd2\xd5\x5b\xa1\x74\x0c\xc1\xc9\xd4\xed\xe2\x9c\xd3\x6b\x64\x4b\x9c\x2e\x86\x34\xdc\x7f\x2f\x96\x5b\x94\x4d\x9f\x3e\xe9\x3d\xde\x06\x0f\xa6\x72\xe5\x8c\x89\xfa\x2b\x5d\x18\x47\x9a\x64\xe0\x6c\x38\x48\x60\x80\x89\x46\x6e\xf1\xf1\x68\xf6\xab\xdf\xd1\xc8\xee\x70\xe6\xdc\xab\x24\x93\x38\x15\xfb\x5e\xd9\x1d\x81\x6e\xf6\x15\xb5\x98\xb7\x72\x74\x87\xa4\xf1\x9b\x7b\xdb\xd3\xe5\x2f\xb0\x72\xb5\x1d\xa7\xf8\x6c\x17\x76\x07\xd8\x60\xc7\x81\x29\x33\xc0\xcc\x9a\x4b\xed\x6b\xb3\x6d\xb6\xcb\xc7\x59\xce\xac\xc7\x7b\xe2\x16\x8f\xac\x4a\x43\xd4\x11\x74\x7d\xbf\x8b\xb6\xd6\x75\x95\xdd\x61\x96\x2c\x27\x09\x62\xf7\x16\xd3\xed\x14\xa4\x87\x6c\xa4\x76\x28\x2b\x5a\xb4\xff\x9c\xc6\x06\xf8\x91\xf4\x21\xa1\x4c\xcf\x2d\xbc\x2c\x69\x9f\xf5\xca\xfd\x37\x00\x00\xff\xff\x00\x5a\x02\xb7\x45\x01\x00\x00"),
		},
		"/terraform/basic/template.description": &vfsgen۰FileInfo{
			name:    "template.description",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 313953975, time.UTC),
			content: []byte("\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x41\x70\x70\x20\x28\x56\x32\x29\x20\x61\x6e\x64\x20\x53\x74\x6f\x72\x61\x67\x65\x20\x41\x63\x63\x6f\x75\x6e\x74"),
		},
		"/terraform/basic/terraform.tf": &vfsgen۰CompressedFileInfo{
			name:             "terraform.tf",
			modTime:          time.Date(2018, 10, 14, 3, 0, 18, 182196453, time.UTC),
			uncompressedSize: 3253,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x5b\x6f\xe3\x36\x13\x7d\xd7\xaf\x20\x98\x7d\xf8\x3e\x20\x91\xb3\xbd\x3c\xb4\x40\x1e\xdc\xad\x93\x1a\x69\x1c\xc3\x72\x10\x2c\x8a\x42\xa0\xa5\xb1\xcc\xb5\x4c\x12\x24\xe5\xc4\x31\xd4\xdf\x5e\xf0\x62\xdd\x2c\x27\x9b\xdd\xfa\xc9\xe2\x0c\x0f\xcf\x9c\x99\xe1\xf0\x0c\x45\x20\xb7\x34\x01\x34\x95\x94\x25\x54\xe4\x10\x6c\x89\xa4\x64\x91\x03\xc2\xaa\x58\xa8\x44\x52\xa1\x29\x67\x31\x4d\x31\xda\x97\x0d\x6b\x92\x53\x60\xfa\xe4\xba\x82\x44\x82\xee\xd8\x34\x30\x52\xef\x09\xce\xd0\x0c\x14\x2f\x64\x02\xe8\x46\xf2\x42\x34\x3c\xa5\x37\xc4\x99\x31\x60\xb4\x0f\x10\x4a\x61\x49\x8a\x5c\xa3\x2b\x84\xf7\xfb\x70\x4a\x92\x35\xc9\x60\x42\x36\x50\x96\x17\x32\xc3\x41\xf3\xa4\x9c\x27\xc4\xf0\x3e\xda\xf9\x85\x08\xc2\x80\x28\xdd\xf6\xd7\x24\x8b\x19\xd9\xc0\x9b\x27\x99\x6d\x8d\x7d\xc0\xb6\x54\x72\xb6\x31\x21\x2f\x88\x82\x77\x80\x98\xe8\x05\x57\x54\x73\xb9\x43\x11\x68\x4d\x59\xa6\x82\x96\x06\x07\xb3\x83\x2e\x24\x75\xc8\x2d\xec\x95\xd6\x42\xfd\x3a\x18\x28\x2d\xe9\x1a\x94\xd9\x04\xbf\x00\x7c\xf9\xf9\xf9\xc7\x70\x91\xf3\x45\x98\x70\x09\xe1\x13\x65\x29\x7f\x52\x21\x03\x3d\xa8\x71\x07\x9e\xc8\x94\x24\x64\x9d\x01\x52\x3d\x2c\x84\x23\xde\x08\xec\x0c\xc1\x33\xd9\x98\x5a\x31\xff\x9b\x54\x20\xcf\xf9\xc5\x13\x97\x79\xda\x91\xe9\x00\xb2\x05\xa9\xaa\xac\x9c\xc2\xf9\x18\x5e\x86\x97\xfd\xfb\x5f\xa8\xb0\x44\xe2\xcb\x83\x12\x4d\x90\x3e\x3a\xe1\x0b\x15\x3e\xca\x48\x40\x42\x97\x3b\xa4\x57\x80\x72\xc2\xb2\x82\x64\x80\xf8\xd2\x7e\xfb\x03\x9a\x15\xe4\x3d\x7a\x24\x4f\xb9\x66\x60\x0b\x28\x10\x92\x6f\x69\x0a\x12\x61\xf2\x52\x48\x90\x1b\xef\x5e\x75\x87\xf1\xff\xb0\xdf\x12\x19\x56\x4b\x25\x6e\x78\xb8\x3e\x39\xf2\x72\xcb\xce\xb3\xd3\x87\xb5\x6f\xc7\xe0\xbc\xab\x1e\xab\xfd\xaa\x25\x57\x78\x87\xde\xaa\x38\xc7\xdd\x6e\xc3\x1a\x94\x76\x91\x18\xb5\x4d\xf8\x35\x5a\xdb\xd9\x1e\x7a\xe8\xb6\xda\xe9\xb0\x62\xcd\x9a\x64\xca\xab\x68\xe1\x6a\x62\xbe\xeb\xac\x57\xd9\xe6\x26\x09\x4b\xf9\x26\x36\x65\xcd\x32\x6c\x6e\xa3\xe5\x92\x3e\x3b\x52\x39\xb0\x4c\xaf\xd0\x15\xfa\x29\x40\x48\x99\xb4\x92\x1c\x5d\xa1\x25\xc9\x95\xa9\x83\x42\x08\x90\xd5\x77\x6f\xc4\x4a\x73\x69\x0a\x8a\x24\x09\x2f\x98\xee\x0f\xb9\xfb\xb3\xbc\x25\x88\x9c\x24\xf0\x3f\xc3\xbf\xb7\xfb\xcf\xf1\x05\x3e\xc7\xf8\xff\xa5\x22\x1f\xf6\xad\x28\x42\x17\x83\x51\xb0\xc8\x5d\x72\xdb\x62\xc6\xf5\xd1\xf6\xac\xfe\xfc\x84\x86\x6a\x58\xe9\x56\x89\xdf\x4b\xf7\x35\x88\x56\x92\xbc\x12\xb1\xa6\x20\xbb\x30\x91\x26\x2c\x25\x32\x6d\xfa\x19\x1d\xa8\xdb\x1f\xeb\x9d\xb0\x59\xfd\x73\x16\x61\x7b\xf3\x09\x60\xa9\x8a\x6d\x41\xfc\x85\xfb\x34\xc0\xe7\xa7\xaa\xcf\x52\xc3\x7f\xf7\xa7\x8d\x08\x11\x2b\x37\xb2\x62\x91\x13\xf6\x66\xde\xaa\x52\xeb\x4d\x55\x69\x31\x4e\x68\xf8\x3e\xf9\xfa\x12\xf9\xf5\x39\x5c\x53\x96\xf6\x50\xbf\x2e\x58\x62\x4e\x18\x0a\x81\x03\x53\xea\xeb\xc2\xf7\x91\xcd\xd2\x15\xc2\xbf\xef\x18\xd9\xd0\xc4\x76\x3e\x52\xf4\xc5\x1e\xfa\xf9\xa3\xeb\x27\x77\x6d\xb5\x72\xf1\x6d\x9a\x57\x89\xa6\x4c\xd1\x6c\xa5\xd5\xf7\xea\x4e\xe8\x2b\xaa\x9b\xe9\x5c\xa8\xef\x17\xb5\x49\xdc\x56\xa8\x83\x7f\x84\x85\xb1\x1e\xd7\xe9\x37\x68\xb3\xf4\x09\x32\x22\x7d\xdd\x1d\xf2\xa6\x32\x26\xd5\xaf\x34\xf5\x7f\x50\x96\xef\xbd\x60\xba\x4d\x67\x66\x4b\x0f\x46\xd7\xcd\xa1\xf8\xb1\x74\xb8\x6f\x13\xce\x18\x38\xc9\xdc\x7d\xd0\xc6\xe8\x5c\xcb\x0e\x42\x48\xba\x21\x72\x77\xbc\xd7\x22\xfb\x27\x85\xc1\xf9\xe7\x07\xdb\x25\x8e\x88\x7b\xc9\xf8\x76\xc1\xc3\xe9\x74\x3c\x89\xc6\x37\x7f\xcc\xa3\x78\x3c\x89\xe6\xb3\x87\xbb\xd1\x64\x3e\x9c\x8f\xef\x27\xb7\xa3\xcf\xf8\x28\x92\xa3\x8a\xf7\xd1\x30\xa5\x65\x61\x52\xe6\xac\x6b\xd8\xb9\xa9\x8b\xf0\xf5\xc3\xe4\x93\x81\x8b\xe2\xc7\xfb\xd9\xed\x68\x16\xcf\x1e\x26\xf3\xf1\xdd\x08\x37\x86\xa2\x7f\x52\xf8\x2d\x67\x68\xbe\xa2\x0a\x65\xdc\xc8\xa0\x39\x4a\x56\x84\x65\x80\x28\xd3\x1c\x3d\x8e\x7e\x8b\xc6\xf3\x91\x01\x89\xaf\x67\xf7\x77\xf1\x74\xf8\xe9\x76\x78\x33\x72\x67\x9d\xb2\xe2\xe6\x94\x3e\x7a\x3c\x96\xce\xd2\x7c\xd0\x95\x83\xf6\x9a\x17\xb3\x1c\xf8\x85\x8e\xb9\x7e\x7e\xf9\x89\x7d\xba\x89\x7a\xab\xe1\xad\x5b\xff\xfc\xe4\x80\xf6\x5d\x88\x82\x32\xf8\x37\x00\x00\xff\xff\x60\x03\xf2\x38\xb5\x0c\x00\x00"),
		},
		"/terraform/basic/values.hcl": &vfsgen۰CompressedFileInfo{
			name:             "values.hcl",
			modTime:          time.Date(2018, 10, 14, 2, 28, 29, 314248864, time.UTC),
			uncompressedSize: 463,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\xc8\x5b\x68\xbc\x40\x2c\x40\xe2\x0a\x88\x1b\x44\x93\xe4\xe3\xba\x4d\x3c\xd1\x78\xdc\x52\x45\xb9\x3b\xaa\x2a\x54\x02\x95\x60\x3f\xff\xbf\xf7\xe7\xc0\x1a\xb9\x1d\x40\x0e\xe9\x10\x55\xd2\x88\x64\x4d\xcb\x19\x4d\xe2\x11\x8e\xe6\x8a\xa8\xc7\x3b\x97\xc1\xe8\x85\xdc\x3c\xd7\x6f\xdc\xed\x39\xe0\x95\x47\x2c\x8b\xab\x96\xea\xda\xa1\xc8\x52\xb4\x43\x13\x54\xca\xf4\x67\x78\xa3\xc1\x91\xf7\xd4\x9e\xbe\xae\xee\x69\x5d\x41\x31\x93\x6d\x41\x37\xe5\xe8\x8e\x36\x1a\xaa\xa5\x5a\x19\x4c\x92\xa3\x89\x9e\x2e\x77\x45\xe3\x45\x63\x25\xb2\x35\x9b\xf2\xb3\xf7\xd9\x34\xee\x91\xcf\x21\x3c\x01\xbb\xc7\x8f\x87\xba\x1d\xa4\xad\x3b\x51\xd4\xc7\x98\x7a\x39\xe6\x3a\xc1\xfc\xb5\xd7\xbb\x35\x71\x90\x8e\x2d\x4a\xfa\xb5\x76\xc7\x13\x27\x70\xb6\x1f\x01\xe3\xf0\xff\xdf\x7e\x07\x71\x0a\x85\x03\x6e\xec\xe9\xc5\x12\xce\x9c\xcf\x00\x00\x00\xff\xff\x75\x91\xd9\x7b\xcf\x01\x00\x00"),
		},
		"/terraform/cosmos": &vfsgen۰DirInfo{
			name:    "cosmos",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 314931093, time.UTC),
		},
		"/terraform/cosmos/NOTE.txt": &vfsgen۰CompressedFileInfo{
			name:             "NOTE.txt",
			modTime:          time.Date(2018, 10, 14, 2, 28, 29, 314450352, time.UTC),
			uncompressedSize: 272,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x4d\x4a\x04\x31\x10\x46\xf7\x39\x45\xcd\x05\xd2\xfb\xde\x29\xe8\xcc\x4a\x06\x11\x5c\x97\xe9\x6f\x9c\x30\xe9\xa4\x48\x55\x94\x36\xf4\xdd\xc5\x1e\xff\x76\xf5\x1e\x8f\x82\xaf\x77\x7f\xe4\x70\xe1\x57\x3c\xf0\x8c\x75\x25\xb9\x12\x69\x0b\x01\xaa\xa7\x96\xd2\x42\x13\x24\x95\x05\xd3\xce\xb9\x63\x02\x2b\xa8\xe2\x84\x4a\x76\xc6\x76\x6b\x69\x35\x40\x47\x72\xee\xf1\x1b\x68\x5f\x4b\x13\xa2\x91\x7a\xf7\x3f\x72\x73\x4f\x98\x25\xb1\x61\x5d\xdd\xcd\x47\xab\xa0\xfb\x96\x83\xc5\x92\xf5\x1a\x6f\xf2\xd7\xfd\xab\xdd\xbe\x90\x15\x3a\x9b\x89\x8e\xc3\xd0\xbb\xbf\xcb\x6f\xb1\x96\x3c\x23\xdb\x2d\xeb\x36\xe1\xaf\x67\x11\xcf\x5f\xbf\xde\xf1\xa2\xd1\xa0\x3e\xc3\x06\x96\x38\x1c\x90\x52\x79\x2e\x35\x4d\xce\x1d\x58\x64\x21\xb5\x1a\x2f\xd0\x9d\xfb\x0c\x00\x00\xff\xff\x38\x7d\x4f\xf9\x10\x01\x00\x00"),
		},
		"/terraform/cosmos/manifest.yaml": &vfsgen۰CompressedFileInfo{
			name:             "manifest.yaml",
			modTime:          time.Date(2018, 10, 14, 2, 28, 29, 314587306, time.UTC),
			uncompressedSize: 325,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x31\x6b\xc3\x30\x10\x85\xf7\xfb\x15\x07\x99\x6b\xd2\xd5\x5b\xa1\x74\x0c\xc1\xc9\xd4\xed\xe2\x9c\xd3\x6b\x64\x4b\x9c\x2e\x86\x34\xdc\x7f\x2f\x96\x5b\x94\x4d\x9f\x3e\xe9\x3d\xde\x06\x0f\xa6\x72\xe5\x8c\x89\xfa\x2b\x5d\x18\x47\x9a\x64\xe0\x6c\x38\x48\x60\x80\x89\x46\x6e\xf1\xf1\x68\xf6\xab\xdf\xd1\xc8\xee\x70\xe6\xdc\xab\x24\x93\x38\x15\xfb\x5e\xd9\x1d\x81\x6e\xf6\x15\xb5\x98\xb7\x72\x74\x87\xa4\xf1\x9b\x7b\xdb\xd3\xe5\x2f\xb0\x72\xb5\x1d\xa7\xf8\x6c\x17\x76\x07\xd8\x60\xc7\x81\x29\x33\xc0\xcc\x9a\x4b\xed\x6b\xb3\x6d\xb6\xcb\xc7\x59\xce\xac\xc7\x7b\xe2\x16\x8f\xac\x4a\x43\xd4\x11\x74\x7d\xbf\x8b\xb6\xd6\x75\x95\xdd\x61\x96\x2c\x27\x09\x62\xf7\x16\xd3\xed\x14\xa4\x87\x6c\xa4\x76\x28\x2b\x5a\xb4\xff\x9c\xc6\x06\xf8\x91\xf4\x21\xa1\x4c\xcf\x2d\xbc\x2c\x69\x9f\xf5\xca\xfd\x37\x00\x00\xff\xff\x00\x5a\x02\xb7\x45\x01\x00\x00"),
		},
		"/terraform/cosmos/template.description": &vfsgen۰FileInfo{
			name:    "template.description",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 314723919, time.UTC),
			content: []byte("\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x41\x70\x70\x20\x28\x56\x32\x29\x2c\x20\x53\x74\x6f\x72\x61\x67\x65\x20\x41\x63\x63\x6f\x75\x6e\x74\x2c\x20\x61\x6e\x64\x20\x43\x6f\x73\x6d\x6f\x73\x44\x42"),
		},
		"/terraform/cosmos/terraform.tf": &vfsgen۰CompressedFileInfo{
			name:             "terraform.tf",
			modTime:          time.Date(2018, 10, 14, 2, 58, 47, 242288232, time.UTC),
			uncompressedSize: 4161,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\x20\x98\x3e\x6c\x40\xa2\xb8\xdd\xf6\xd0\x15\x7e\xc8\xc5\xcd\x82\xac\x6e\x60\xa7\x28\x8a\x61\x10\x68\xea\x58\x61\x43\x91\x04\x49\xb9\x71\x02\xed\xb7\x0f\xbc\xe8\x62\x59\x6e\x9a\xb6\x7e\xb2\xc9\x73\x3e\x7e\xfc\xce\x8d\x3e\x40\x0b\xd0\x6b\x46\x01\x5d\x6b\x26\x28\x53\x1c\x46\x6b\xa2\x19\x59\x72\x40\xd8\x94\x4b\x43\x35\x53\x96\x49\x91\xb2\x0c\xa3\xc7\xaa\xb3\x4b\x39\x03\x61\xf7\xae\x1b\xa0\x1a\x6c\x6f\xcf\x82\x20\xad\xcf\xe8\x00\xcd\xc1\xc8\x52\x53\x40\x17\x5a\x96\xaa\x63\xa9\xe3\x46\x9a\xbb\x0d\x8c\x1e\x47\x08\x65\xb0\x22\x25\xb7\x68\x82\xf0\xe3\x63\x72\x4d\xe8\x1d\xc9\x61\x46\x0a\xa8\xaa\x23\x9d\xe3\x51\xf7\x24\x2e\x29\x71\xbc\x77\x3c\x3f\x13\x45\x04\x10\x63\xb7\xed\x2d\xc9\x53\x41\x0a\x78\xf2\x24\xe7\xd6\xf1\x03\xb1\x66\x5a\x8a\xc2\x5d\x79\x49\x0c\x3c\x03\xc4\xdd\x5e\x49\xc3\xac\xd4\x1b\xb4\x00\x6b\x99\xc8\xcd\x68\x4b\x83\x7a\x3b\x40\x97\x9a\x05\xe4\x2d\xec\x5b\x6b\x95\xf9\xf3\xf8\xd8\x58\xcd\xee\xc0\x38\x27\x78\x0d\xf0\xf9\x8f\xfb\xdf\x92\x25\x97\xcb\x84\x4a\x0d\xc9\x17\x26\x32\xf9\xc5\x24\x02\xec\x71\x8b\x7b\x1c\x89\x5c\x13\x4a\xee\x72\x40\x66\x80\x85\x0a\xc4\x3b\x17\x3b\x40\x70\x4f\x0a\x97\x2b\xee\x7b\x97\x0a\x70\x2e\x8f\xbe\x48\xcd\xb3\x9e\x4c\x35\xc8\x1a\xb4\x69\xa2\xb2\x0f\xe7\x65\x32\x4e\xc6\xc3\xfe\x0f\x4c\x79\x22\xe9\xb8\x56\xa2\x0b\x32\x44\x27\x79\x60\x2a\xde\x72\xa1\x80\xb2\xd5\x06\xd9\x5b\x40\x9c\x88\xbc\x24\x39\x20\xb9\xf2\xbf\xe3\x01\xdd\x0c\x8a\x16\x03\x92\x67\xd2\x0a\xf0\x09\x34\x52\x5a\xae\x59\x06\x1a\x61\xf2\x50\x6a\xd0\x45\x34\x6f\xaa\xc3\xd9\xbf\x78\x5c\x13\x9d\x34\x4b\x15\xee\x58\x84\x3a\xd9\xb1\x0a\xcb\xc1\xb2\x57\x87\xad\x6d\x6f\x23\x58\x37\x35\xd6\xda\x35\x4b\x21\xf1\xea\xda\x6a\x38\xa7\xfd\x6a\xc3\x16\x8c\x0d\x37\x71\x6a\xbb\xeb\xb7\x68\xdb\xc6\xfe\xd0\xba\xda\x5a\xa3\x7a\xc5\x6f\x5b\x92\x9b\xa8\xa2\x87\x6b\x89\xc5\xaa\xf3\x56\xd5\x36\x37\x4d\x44\x26\x8b\xd4\xa5\xb5\xc8\xb1\xeb\x46\xab\x15\xbb\x0f\xa4\x38\x88\xdc\xde\xa2\x09\xfa\x7d\x84\x90\x71\x61\x25\x1c\x4d\xd0\x8a\x70\xe3\xf2\xa0\x54\x0a\x74\xf3\x7b\xf0\xc6\xc6\x4a\xed\x12\x8a\x50\x2a\x4b\x61\x87\xaf\xdc\xff\x78\xde\x1a\x14\x27\x14\x7e\x71\xfc\x07\xab\xff\x10\x1f\xe1\x43\x8c\x7f\xad\x0c\x79\xf1\xb8\x75\x8b\x24\xdc\xc1\x29\x58\xf2\x10\xdc\x6d\x31\xd3\xf6\x68\x7f\xd6\x70\x7c\x12\x47\x35\x69\x74\x6b\xc4\x1f\xa4\xfb\x35\x88\xad\x20\x45\x25\x52\xcb\x40\xf7\x61\x16\x96\x88\x8c\xe8\xac\x6b\xe7\x74\x60\xc1\x3f\xb5\x1b\xe5\xa3\xfa\xf7\x7c\x81\x7d\xe7\x53\x20\x32\x93\xfa\x84\xf8\x07\x0f\x69\x80\x0f\xf7\x65\x9f\xa7\x86\xff\x1d\x0e\x1b\x51\x2a\x35\x61\x64\xa5\x8a\x13\xf1\x64\xdc\x9a\x54\x1b\x0c\x55\xe5\x31\xf6\x68\xf8\x3c\xf9\x86\x02\xf9\xed\x31\xbc\x63\x22\x1b\xa0\xfe\xb6\x14\xd4\x9d\x70\xa2\x14\x1e\xb9\x54\xbf\x2b\x63\x1d\xf9\x28\x4d\x10\x3e\xdf\x08\x52\x30\xea\x2b\x1f\x19\xf6\xe0\x0f\xfd\xf4\x32\xd4\xd3\x4e\x24\xbe\x4f\xf1\x26\xcc\x4c\x18\x96\xdf\x5a\xf3\xa3\xaa\x13\xf6\x15\xcd\xdd\x6c\x2e\xcd\x8f\x4b\xda\x25\xee\xf3\x33\xc0\x7f\x84\xe5\x40\x8a\x3e\x29\xcc\x01\x3a\x93\xa6\x90\xe6\xfc\x74\xa0\x47\x31\x61\x21\x07\x8d\x11\x6e\x27\x74\xc1\x1c\xf2\xcb\xf1\x78\x3c\x0e\xbf\xc9\x3d\x9a\xa0\xd7\xee\x33\x2c\x34\xf5\xf8\xd9\xb2\xd3\x92\xb2\x25\xee\xb6\xcd\xe7\x89\x7c\x94\x2d\x8f\x9a\xfe\x13\x19\x26\x9a\x75\x9b\xcf\xcf\xc8\xfb\x1f\x0d\x13\x42\x72\xb5\x02\xdd\x84\x68\xb0\xe7\xec\x2d\x90\x0b\x2e\x97\x84\x9f\x4b\x5a\xba\xdb\x9f\x9f\xfa\x2a\x41\x08\x84\x9b\xe1\x29\x29\xad\x2c\x88\x65\x34\x5d\x11\xc6\xe5\xda\x97\x8c\xd5\x25\x04\x2b\x2a\x85\x61\xc6\x82\xa0\x9b\x54\x49\xce\xe8\x26\xaa\xdd\xdf\xe4\xb0\x06\xde\x1e\x7a\x2a\x4b\x91\x41\xb6\xb0\x84\x83\x00\x63\x70\xe3\x54\x90\x7b\x2f\xb5\x5e\x13\x9e\x32\xe1\xa6\xb8\x14\x99\xf1\x89\xb0\x65\x64\x6a\xdf\x54\x69\x58\xb1\xfb\x80\xfc\x2a\xe6\x4a\x15\xf8\xe5\x20\xd3\x26\x40\x2d\xb3\xdd\x98\x3d\x37\x62\xee\x53\x2b\x92\x2a\xcd\xa4\x66\x76\x83\x26\xa8\x3e\xdd\x1b\x0c\x37\xf1\x36\x91\xbe\xb3\x83\xaf\x62\x4b\x73\x8d\xe5\xdb\xa6\xee\x93\xdd\xc4\x35\xc7\xaf\x8c\xc1\x9f\xd0\xc8\xbf\x11\xa7\xdb\x7b\xb6\xc6\x94\x7b\x8d\x0d\x60\xf4\xcd\x02\x4a\x7c\xc8\xd5\x2f\x14\x2a\x85\x80\x20\x59\x98\xa0\xdb\x18\xbd\x87\x4c\x80\x50\x9a\x15\x44\x6f\x76\x7d\x3d\x72\x7c\x84\x3b\x9c\xff\x5e\xf9\x8a\x09\x44\xc2\xdb\x3f\x66\x1a\x3e\xb9\xbe\xbe\x9c\x2d\x2e\x2f\xfe\xba\x59\xa4\x97\xb3\xc5\xcd\xfc\xc3\xbb\xe9\xec\xe6\xe4\xe6\xf2\xfd\xec\x6a\xfa\x09\xef\xdc\x64\x67\x4a\xc4\xdb\x08\x63\xb5\xaf\xce\xb0\x7b\x07\x9b\x98\x85\xf8\xed\x87\xd9\x99\x83\x5b\xa4\x1f\xdf\xcf\xaf\xa6\xf3\x74\xfe\x61\x76\x73\xf9\x6e\x8a\x3b\xcf\xc8\xf8\x08\xaf\x5d\x3e\x4e\x4f\x17\x97\x37\x53\x67\x99\xbe\x9d\xbf\x7f\x97\x5e\x9f\x9c\x5d\x9d\x5c\x74\x5d\x06\xfe\x35\x55\x61\xa7\xfb\x4f\xa6\x3a\xde\x5e\x8b\x9a\x54\xc7\x71\xa1\xb7\xdd\xfe\xef\xa8\x99\xd0\x38\x0e\xce\x1a\x89\x3d\x87\x93\x10\x86\xa9\xc8\x94\x64\xc2\x4e\x5a\x89\xfa\xfd\x3d\xc9\x96\x09\x44\xb3\xea\x4d\xf4\xbb\x82\xcd\x13\x2e\x75\x68\x0b\x62\x2c\x68\x2f\xe7\x9b\x30\xed\xf7\x4f\xb5\xc1\x3c\x7b\xaa\x7e\x0f\xf7\x3e\x96\x63\x7d\xa3\x51\x35\xfa\x3f\x00\x00\xff\xff\xd4\x5c\xe5\x49\x41\x10\x00\x00"),
		},
		"/terraform/cosmos/values.hcl": &vfsgen۰CompressedFileInfo{
			name:             "values.hcl",
			modTime:          time.Date(2018, 10, 14, 2, 28, 29, 314981984, time.UTC),
			uncompressedSize: 463,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\xc8\x5b\x68\xbc\x40\x2c\x40\xe2\x0a\x88\x1b\x44\x93\xe4\xe3\xba\x4d\x3c\xd1\x78\xdc\x52\x45\xb9\x3b\xaa\x2a\x54\x02\x95\x60\x3f\xff\xbf\xf7\xe7\xc0\x1a\xb9\x1d\x40\x0e\xe9\x10\x55\xd2\x88\x64\x4d\xcb\x19\x4d\xe2\x11\x8e\xe6\x8a\xa8\xc7\x3b\x97\xc1\xe8\x85\xdc\x3c\xd7\x6f\xdc\xed\x39\xe0\x95\x47\x2c\x8b\xab\x96\xea\xda\xa1\xc8\x52\xb4\x43\x13\x54\xca\xf4\x67\x78\xa3\xc1\x91\xf7\xd4\x9e\xbe\xae\xee\x69\x5d\x41\x31\x93\x6d\x41\x37\xe5\xe8\x8e\x36\x1a\xaa\xa5\x5a\x19\x4c\x92\xa3\x89\x9e\x2e\x77\x45\xe3\x45\x63\x25\xb2\x35\x9b\xf2\xb3\xf7\xd9\x34\xee\x91\xcf\x21\x3c\x01\xbb\xc7\x8f\x87\xba\x1d\xa4\xad\x3b\x51\xd4\xc7\x98\x7a\x39\xe6\x3a\xc1\xfc\xb5\xd7\xbb\x35\x71\x90\x8e\x2d\x4a\xfa\xb5\x76\xc7\x13\x27\x70\xb6\x1f\x01\xe3\xf0\xff\xdf\x7e\x07\x71\x0a\x85\x03\x6e\xec\xe9\xc5\x12\xce\x9c\xcf\x00\x00\x00\xff\xff\x75\x91\xd9\x7b\xcf\x01\x00\x00"),
		},
		"/terraform/cosmosSearch": &vfsgen۰DirInfo{
			name:    "cosmosSearch",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 315144957, time.UTC),
		},
		"/terraform/cosmosSearch/template.description": &vfsgen۰FileInfo{
			name:    "template.description",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 315195095, time.UTC),
			content: []byte("\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x41\x70\x70\x20\x28\x56\x32\x29\x2c\x20\x53\x74\x6f\x72\x61\x67\x65\x20\x41\x63\x63\x6f\x75\x6e\x74\x2c\x20\x43\x6f\x73\x6d\x6f\x73\x44\x42\x2c\x20\x41\x7a\x75\x72\x65\x20\x53\x65\x61\x72\x63\x68"),
		},
		"/terraform/servicebus": &vfsgen۰DirInfo{
			name:    "servicebus",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 315363076, time.UTC),
		},
		"/terraform/servicebus/template.description": &vfsgen۰FileInfo{
			name:    "template.description",
			modTime: time.Date(2018, 10, 14, 2, 28, 29, 315416311, time.UTC),
			content: []byte("\x46\x75\x6e\x63\x74\x69\x6f\x6e\x20\x41\x70\x70\x20\x28\x56\x32\x29\x2c\x20\x53\x74\x6f\x72\x61\x67\x65\x20\x41\x63\x63\x6f\x75\x6e\x74\x2c\x20\x61\x6e\x64\x20\x53\x65\x72\x76\x69\x63\x65\x20\x42\x75\x73"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform"].(os.FileInfo),
	}
	fs["/terraform"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/basic"].(os.FileInfo),
		fs["/terraform/cosmos"].(os.FileInfo),
		fs["/terraform/cosmosSearch"].(os.FileInfo),
		fs["/terraform/servicebus"].(os.FileInfo),
	}
	fs["/terraform/basic"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/basic/NOTE.txt"].(os.FileInfo),
		fs["/terraform/basic/manifest.yaml"].(os.FileInfo),
		fs["/terraform/basic/template.description"].(os.FileInfo),
		fs["/terraform/basic/terraform.tf"].(os.FileInfo),
		fs["/terraform/basic/values.hcl"].(os.FileInfo),
	}
	fs["/terraform/cosmos"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/cosmos/NOTE.txt"].(os.FileInfo),
		fs["/terraform/cosmos/manifest.yaml"].(os.FileInfo),
		fs["/terraform/cosmos/template.description"].(os.FileInfo),
		fs["/terraform/cosmos/terraform.tf"].(os.FileInfo),
		fs["/terraform/cosmos/values.hcl"].(os.FileInfo),
	}
	fs["/terraform/cosmosSearch"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/cosmosSearch/template.description"].(os.FileInfo),
	}
	fs["/terraform/servicebus"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/terraform/servicebus/template.description"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
